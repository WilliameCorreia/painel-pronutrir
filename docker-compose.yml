version: "3.7"

networks:
  kong-net:
    external: true

services:
  app:
    build: .
    container_name: sga_painel
    volumes:
      - .:/app
    working_dir: /app
    restart: always
    ports:
      - 5645:80
    networks:
      - kong-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
      restart_policy:
        condition: on-failure

  novosga:
    image: novosga/novosga:2.0.8
    container_name: novosga
    restart: always
    depends_on:
      - mysqldb
    ports:
      - "5656:80"
      - "2020:2020"
    networks:
      - kong-net
    environment:
      APP_ENV: 'prod'
      # database connection
      DATABASE_URL: 'mysql://pronutrir_painel:MySQL_App_P4ssw0rd@mysqldb:3306/painel?charset=utf8mb4&serverVersion=5.7'
      # default admin user
      NOVOSGA_ADMIN_USERNAME: 'admin'
      NOVOSGA_ADMIN_PASSWORD: 'Pronutrir512355'
      NOVOSGA_ADMIN_FIRSTNAME: 'Administrador'
      NOVOSGA_ADMIN_LASTNAME: 'Global'
      # default unity
      NOVOSGA_UNITY_NAME: 'My Unity'
      NOVOSGA_UNITY_CODE: 'U01'
      # default no-priority
      NOVOSGA_NOPRIORITY_NAME: 'Normal'
      NOVOSGA_NOPRIORITY_DESCRIPTION: 'Normal service'
      # default priority
      NOVOSGA_PRIORITY_NAME: 'Priority'
      NOVOSGA_PRIORITY_DESCRIPTION: 'Priority service'
      # default place
      NOVOSGA_PLACE_NAME: 'Box'
      # Set TimeZone and locale
      TZ: 'America/Sao_Paulo'
      LANGUAGE: 'pt_BR'
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
      restart_policy:
        condition: on-failure

  mysqldb:
    container_name: dbMySql
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
      - 33063:33063
    networks:
      - kong-net
    volumes:
      - dbData:/home/container_folder_dump
      - dbData:/var/lib/mysql
    environment:
      MYSQL_USER: 'pronutrir_painel'
      MYSQL_DATABASE: 'painel'
      MYSQL_ROOT_PASSWORD: 'MySQL_r00t_P4ssW0rd'
      MYSQL_PASSWORD: 'MySQL_App_P4ssw0rd'
      # Set TimeZone
      TZ: 'America/Sao_Paulo'
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
      restart_policy:
        condition: on-failure

volumes:
  dbData:

    # Backup
    #docker exec CONTAINER /usr/bin/mysqldump -u root --password=root DATABASE > backup.sql

    # Restore
    #cat backup.sql | docker exec -i CONTAINER /usr/bin/mysql -u root --password=root DATABASE

    # Sabendo o id do container que deseja copiar o arquivo, utilize o comando:
    #docker cp meuarquivo.js <id_do_container>:/meuarquivo.js

    #Se você quer copiar do continaer para a máquina host, utilize:
    #docker cp <id_do_container>:/meuarquivo.js meuarquivo.js

    #Para restaurar um backup de um banco de dados do MySQL siga os procedimentos abaixo: 
    #mysql -u usuario -p nome_do_banco < nome_do_arquivo. sql.
